{
  "openapi": "3.0.1",
  "info": {
    "title": "Schemacat",
    "description": "Schemacat Description",
    "contact": {
      "name": "Code Wright",
      "url": "https://codewright.io/",
      "email": "admin@codewright.io"
    },
    "version": "v1",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/codewright-io/tagcat/main/tagcat_sml.png",
      "altText": "Logo"
    }
  },
  "paths": {
    "/api/items/metadata/v1": {
      "post": {
        "tags": [
          "ItemMetadata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataSetCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataSetCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataSetCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/metadata/v1/add": {
      "post": {
        "tags": [
          "ItemMetadata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataAddCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataAddCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataAddCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/metadata/v1/remove": {
      "post": {
        "tags": [
          "ItemMetadata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataRemoveCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataRemoveCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemMetadataRemoveCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/metadata/v1/{tenantId}/{id}": {
      "get": {
        "tags": [
          "ItemMetadata"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetadataEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetadataEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetadataEntry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/items/metadata/v1/search/{tenantId}": {
      "get": {
        "tags": [
          "ItemMetadata"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondaryName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondaryValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/items/relationships/v1": {
      "post": {
        "tags": [
          "ItemRelationships"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsSetCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsSetCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsSetCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/relationships/v1/add": {
      "post": {
        "tags": [
          "ItemRelationships"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsAddCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsAddCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsAddCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/relationships/v1/remove": {
      "post": {
        "tags": [
          "ItemRelationships"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsRemoveCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsRemoveCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRelationshipsRemoveCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/relationships/v1/{tenantId}/{id}": {
      "get": {
        "tags": [
          "ItemRelationships"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipEntry"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/relationships/v1/referencing/{tenantId}/{targetId}": {
      "get": {
        "tags": [
          "ItemRelationships"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/items/v1": {
      "post": {
        "tags": [
          "Items"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSetAllCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSetAllCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSetAllCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/v1/{tenantId}/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/v1/events/{tenantId}/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IDomainEvent"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IDomainEvent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IDomainEvent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/tags/v1": {
      "post": {
        "tags": [
          "ItemTags"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsSetCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsSetCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsSetCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/tags/v1/add": {
      "post": {
        "tags": [
          "ItemTags"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsAddCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsAddCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsAddCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/tags/v1/remove": {
      "post": {
        "tags": [
          "ItemTags"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsRemoveCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsRemoveCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTagsRemoveCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/tags/v1/{tenantId}/{id}": {
      "get": {
        "tags": [
          "ItemTags"
        ],
        "parameters": [
          {
            "name": "culture",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTagViewEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTagViewEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTagViewEntry"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/tags/v1/search/{tenantId}": {
      "get": {
        "tags": [
          "ItemTags"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "culture",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/blob/v1/{typeId}/{id}": {
      "post": {
        "tags": [
          "JsonBlob"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JsonBlob"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JsonBlob"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "JsonBlob"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/blob/v1/{typeId}": {
      "get": {
        "tags": [
          "JsonBlob"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/schema/v1": {
      "post": {
        "tags": [
          "Schema"
        ],
        "summary": "Upload a swagger file for processing.",
        "requestBody": {
          "description": "The swagger json command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSchemaCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSchemaCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSchemaCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddSchemaCommand": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "string",
            "description": "The schema contents",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to add a new schema file"
      },
      "CommandResult": {
        "required": [
          "id",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IDomainEvent": {
        "required": [
          "id",
          "tenantId",
          "time",
          "typeId",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "readOnly": true
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "readOnly": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sourceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "typeId": {
            "minLength": 1,
            "type": "string",
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "eventClass": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ItemMetadataAddCommand": {
        "required": [
          "id",
          "metadata",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemMetadataRemoveCommand": {
        "required": [
          "id",
          "metadata",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemMetadataSetCommand": {
        "required": [
          "id",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemRelationshipsAddCommand": {
        "required": [
          "id",
          "relationships",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemRelationshipsRemoveCommand": {
        "required": [
          "id",
          "relationships",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemRelationshipsSetCommand": {
        "required": [
          "id",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemResult": {
        "required": [
          "id",
          "tenantId",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "tenantId": {
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipEntry"
            },
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemSetAllCommand": {
        "required": [
          "id",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemTagViewEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemTagsAddCommand": {
        "required": [
          "id",
          "tags",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "culture": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemTagsRemoveCommand": {
        "required": [
          "id",
          "tags",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "culture": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemTagsSetCommand": {
        "required": [
          "id",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "tenantId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "culture": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetadataEntry": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipEntry": {
        "required": [
          "targetId"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "targetId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RelationshipType": {
        "enum": [
          "Undefined",
          "ChildOf",
          "AliasOf",
          "EquivalentTo",
          "RelatedTo",
          "SubcategoryOf",
          "TranslationOf",
          "Tag"
        ],
        "type": "string",
        "description": "<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n<p>Possible values:</p>\r\n<ul>\r\n</ul>\r\n"
      }
    }
  },
  "tags": [
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    },
    {
      "name": "Schema",
      "description": "Controller for swagger or OpenApi operations"
    }
  ]
}